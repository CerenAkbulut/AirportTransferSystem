<?php

namespace App\Controller\Admin;

use App\Entity\Admin\Vehicles;
use App\Form\Admin\VehiclesType;
use App\Repository\Admin\VehiclesRepository;
use App\Repository\CarsRepository;
use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
use Symfony\Component\HttpFoundation\File\Exception\FileException;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\HttpFoundation\Response;
use Symfony\Component\Routing\Annotation\Route;
use Symfony\Component\Validator\Constraints\File;

/**
 * @Route("/admin/vehicles")
 */
class VehiclesController extends AbstractController
{
    /**
     * @Route("/", name="admin_vehicles_index", methods={"GET"})
     */
    public function index(VehiclesRepository $vehiclesRepository): Response
    {
        return $this->render('admin/vehicles/index.html.twig', [
            'vehicles' => $vehiclesRepository->findAll(),
        ]);
    }

    /**
     * @Route("/new/{id}", name="admin_vehicles_new", methods={"GET","POST"})
     */
    public function new(Request $request,$id,CarsRepository $carsRepository,VehiclesRepository $vehiclesRepository): Response
    {
        $vehicles=$vehiclesRepository->findBy(['carsid'=>$id]);
        $cars=$carsRepository->findOneBy(['id'=>'$id']);
        //echo $cars->getTitle();
        $vehicle = new Vehicles();
        $form = $this->createForm(VehiclesType::class, $vehicle);
        $form->handleRequest($request);

        if ($form->isSubmitted() && $form->isValid()) {
            $entityManager = $this->getDoctrine()->getManager();

            //*****************file upload******************>>>>>>>>>>>>
            /** @var  file $file */
            $file = $form['image']->getData();
            if ($file) {
                $fileName = $this->generateUniqueFileName() . '.' . $file->guessExtension();

                try {
                    $file->move(
                        $this->getParameter('images_directory'),
                        $fileName
                    );
                } catch (FileException $e) {
                }
                $vehicles->setImage($fileName);
            }

            //*****************file upload******************>>>>>>>>>>>>
            $vehicle->setVehiclesid($vehicle->getId());
            $entityManager->persist($vehicle);
            $entityManager->flush();

            return $this->redirectToRoute('admin_vehicles_new',['id'=> $id]);
        }

        return $this->render('admin/vehicles/new.html.twig', [
            'vehicle' => $vehicle,
            'vehicles' => $vehicles,
            'cars' => $cars,
            'form' => $form->createView(),
        ]);
    }


    /** return string */
    private function generateUniqueFileName(){
        //md5() reduces the similarity of the file names generated by
        //uniqid(),which is based on timestamps
        return md5(uniqid());
    }




    /**
     * @Route("/{id}", name="admin_vehicles_show", methods={"GET"})
     */
    public function show(Vehicles $vehicle): Response
    {
        return $this->render('admin/vehicles/show.html.twig', [
            'vehicle' => $vehicle,
        ]);
    }

    /**
     * @Route("/{id}/edit/{cid}", name="admin_vehicles_edit", methods={"GET","POST"})
     */
    public function edit(Request $request, $cid, Vehicles $vehicle): Response
    {
        $form = $this->createForm(VehiclesType::class, $vehicle);
        $form->handleRequest($request);

        if ($form->isSubmitted() && $form->isValid()) {


            //*****************file upload******************>>>>>>>>>>>>
            /** @var  file $file */
            $file = $form['image']->getData();
            if ($file) {
                $fileName = $this->generateUniqueFileName() . '.' . $file->guessExtension();

                try {
                    $file->move(
                        $this->getParameter('images_directory'),
                        $fileName
                    );
                } catch (FileException $e) {
                }
                $vehicles->setImage($fileName);
            }

            //*****************file upload******************>>>>>>>>>>>>

            $this->getDoctrine()->getManager()->flush();

            return $this->redirectToRoute('admin_vehicles_new',['id'=> $cid]);
        }

        return $this->render('admin/vehicles/edit.html.twig', [
            'vehicle' => $vehicle,
            'form' => $form->createView(),
        ]);
    }

    /**
     * @Route("/{id}/{cid}", name="admin_vehicles_delete", methods={"DELETE"})
     */
    public function delete(Request $request,$cid ,Vehicles $vehicle): Response
    {
        if ($this->isCsrfTokenValid('delete'.$vehicle->getId(), $request->request->get('_token'))) {
            $entityManager = $this->getDoctrine()->getManager();
            $entityManager->remove($vehicle);
            $entityManager->flush();
        }

        return $this->redirectToRoute('admin_vehicles_new',['id'=>$cid]);
    }
}
